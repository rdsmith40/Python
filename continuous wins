using System;
using System.Collections.Generic;

namespace ContinuousWINS
{
    class Guest
    {
        public string FullName { get; set; }
        public string Email { get; set; }
        public List<string> BreakoutSessions { get; set; }
        public bool PaidTicket { get; set; }
        public bool NeedsHotel { get; set; }
        public bool BaggageCheck { get; set; }
        public string BaggageClaimNumber { get; set; }

        public void Display()
        {
            Console.WriteLine($"\nGuest: {FullName}");
            Console.WriteLine($"Email: {Email}");
            Console.WriteLine($"Ticket Purchased: ${(PaidTicket ? "200" : "Pending")}");
            Console.WriteLine("Breakout Sessions:");
            foreach (string session in BreakoutSessions)
            {
                Console.WriteLine($" - {session}");
            }
            Console.WriteLine($"Hotel Room Needed: {(NeedsHotel ? "Yes" : "No")}");
            Console.WriteLine($"Courtesy Baggage Check: {(BaggageCheck ? "Yes" : "No")}");
            if (BaggageCheck)
                Console.WriteLine($"Baggage Claim Number: {BaggageClaimNumber}");
        }
    }

    class Speaker
    {
        public string FullName { get; set; }
        public string Company { get; set; }
        public string Bio { get; set; }
        public string PictureDesc { get; set; }
        public string Subject { get; set; }
        public string TimeSlot { get; set; }
        public bool NeedsHotel { get; set; }
        public bool BaggageCheck { get; set; }
        public string BaggageClaimNumber { get; set; }

        public void Display()
        {
            Console.WriteLine($"\nSpeaker: {FullName} from {Company}");
            Console.WriteLine($"Bio: {Bio}");
            Console.WriteLine($"Photo Description: {PictureDesc}");
            Console.WriteLine($"Topic: {Subject}");
            Console.WriteLine($"Speaking Time: {TimeSlot}");
            Console.WriteLine($"Hotel Room Needed: {(NeedsHotel ? "Yes" : "No")}");
            Console.WriteLine($"Courtesy Baggage Check: {(BaggageCheck ? "Yes" : "No")}");
            if (BaggageCheck)
                Console.WriteLine($"Baggage Claim Number: {BaggageClaimNumber}");
        }
    }

    class Program
    {
        static List<Guest> guestList = new List<Guest>();
        static List<Speaker> speakerList = new List<Speaker>();

        static void Main(string[] args)
        {
            Console.WriteLine("=== Welcome to Continuous WINS Conference Admissions ===");

            Console.WriteLine("\n=== Business Info ===");
            Console.WriteLine("Business Name: NetworkX Events");
            Console.WriteLine("Location: Phoenix, AZ");
            Console.WriteLine("Contact: info@networkxevents.com | (555) 123-4567");
            Console.WriteLine("Services: Event Admissions, Vendor Management, Online Menus, HR Staffing");
            Console.WriteLine("Socials: @NetworkXEvents\n");

            while (true)
            {
                Console.WriteLine("\n--- Main Menu ---");
                Console.WriteLine("1. Register Guest");
                Console.WriteLine("2. Register Speaker");
                Console.WriteLine("3. View All Guests");
                Console.WriteLine("4. View All Speakers");
                Console.WriteLine("5. Exit");
                Console.Write("Choose an option: ");
                string option = Console.ReadLine();

                if (option == "1")
                {
                    RegisterGuest();
                }
                else if (option == "2")
                {
                    RegisterSpeaker();
                }
                else if (option == "3")
                {
                    ShowGuests();
                }
                else if (option == "4")
                {
                    ShowSpeakers();
                }
                else if (option == "5")
                {
                    Console.WriteLine("Thank you for using the system. Goodbye!");
                    break;
                }
                else
                {
                    Console.WriteLine("Invalid choice. Try again.");
                }
            }
        }

        static string GenerateClaimNumber()
        {
            Random rnd = new Random();
            return "BAG" + rnd.Next(100000, 999999).ToString();
        }

        static void RegisterGuest()
        {
            Console.WriteLine("\n--- Register Guest ---");
            Console.Write("Full Name: ");
            string name = Console.ReadLine();

            Console.Write("Email: ");
            string email = Console.ReadLine();

            Console.WriteLine("Enter breakout sessions (type 'done' to finish):");
            List<string> sessions = new List<string>();
            while (true)
            {
                string input = Console.ReadLine();
                if (input.ToLower() == "done") break;
                sessions.Add(input);
            }

            Console.Write("Do they need a hotel room? (yes/no): ");
            bool hotel = Console.ReadLine().ToLower() == "yes";

            Console.Write("Do they need baggage check? (yes/no): ");
            bool baggage = Console.ReadLine().ToLower() == "yes";

            guestList.Add(new Guest
            {
                FullName = name,
                Email = email,
                BreakoutSessions = sessions,
                PaidTicket = true,
                NeedsHotel = hotel,
                BaggageCheck = baggage,
                BaggageClaimNumber = baggage ? GenerateClaimNumber() : null
            });

            Console.WriteLine("✅ Guest registered successfully. Ticket charged: $200.");
        }

        static void RegisterSpeaker()
        {
            Console.WriteLine("\n--- Register Speaker ---");
            Console.Write("Full Name: ");
            string name = Console.ReadLine();

            Console.Write("Company Name: ");
            string company = Console.ReadLine();

            Console.Write("Bio: ");
            string bio = Console.ReadLine();

            Console.Write("Photo description (i.e., 'Headshot with blue background'): ");
            string pic = Console.ReadLine();

            Console.Write("Speaking Subject: ");
            string subject = Console.ReadLine();

            Console.Write("Time & Date of Presentation (e.g., 'Dec 13, 10:30 AM'): ");
            string time = Console.ReadLine();

            Console.Write("Do they need a hotel room? (yes/no): ");
            bool hotel = Console.ReadLine().ToLower() == "yes";

            Console.Write("Do they need baggage check? (yes/no): ");
            bool baggage = Console.ReadLine().ToLower() == "yes";

            speakerList.Add(new Speaker
            {
                FullName = name,
                Company = company,
                Bio = bio,
                PictureDesc = pic,
                Subject = subject,
                TimeSlot = time,
                NeedsHotel = hotel,
                BaggageCheck = baggage,
                BaggageClaimNumber = baggage ? GenerateClaimNumber() : null
            });

            Console.WriteLine("✅ Speaker registered successfully.");
        }

        static void ShowGuests()
        {
            Console.WriteLine("\n=== Registered Guests ===");
            if (guestList.Count == 0)
            {
                Console.WriteLine("No guests registered.");
                return;
            }

            foreach (var guest in guestList)
            {
                guest.Display();
            }
        }

        static void ShowSpeakers()
        {
            Console.WriteLine("\n=== Registered Speakers ===");
            if (speakerList.Count == 0)
            {
                Console.WriteLine("No speakers registered.");
                return;
            }

            foreach (var speaker in speakerList)
            {
                speaker.Display();
            }
        }
    }
}
