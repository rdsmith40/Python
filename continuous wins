using System;
using System.Collections.Generic;

namespace ContinuousWinsConference
{
    // Business Info Class
    public class Business
    {
        public string Name { get; set; }
        public string Location { get; set; }
        public string Contact { get; set; }
        public string Services { get; set; }
        public string SocialMedia { get; set; }

        public void DisplayInfo()
        {
            Console.WriteLine("=== Business Information ===");
            Console.WriteLine($"Name: {Name}");
            Console.WriteLine($"Location: {Location}");
            Console.WriteLine($"Contact: {Contact}");
            Console.WriteLine($"Services: {Services}");
            Console.WriteLine($"Social Media: {SocialMedia}");
        }
    }

    // Guest Class
    public class Guest
    {
        public string FullName { get; set; }
        public string Email { get; set; }
        public List<string> BreakoutSessions { get; set; } = new List<string>();
        public bool PaidTicket { get; set; } = true;
        public bool NeedsHotel { get; set; }
        public bool BaggageCheck { get; set; }

        public void Display()
        {
            Console.WriteLine($"\nGuest: {FullName}");
            Console.WriteLine($"Email: {Email}");
            Console.WriteLine($"Ticket Purchased: ${(PaidTicket ? 200 : 0)}");
            Console.WriteLine("Breakout Sessions:");
            foreach (string session in BreakoutSessions)
            {
                Console.WriteLine($" - {session}");
            }
            Console.WriteLine($"Hotel Room Needed: {(NeedsHotel ? "Yes" : "No")}");
            Console.WriteLine($"Courtesy Baggage Check: {(BaggageCheck ? "Yes" : "No")}");
        }
    }

    // Speaker Class
    public class Speaker
    {
        public string FullName { get; set; }
        public string Company { get; set; }
        public string Bio { get; set; }
        public string PictureDesc { get; set; }
        public string Subject { get; set; }
        public string TimeSlot { get; set; }
        public bool NeedsHotel { get; set; }
        public bool BaggageCheck { get; set; }

        public void Display()
        {
            Console.WriteLine($"\nSpeaker: {FullName} from {Company}");
            Console.WriteLine($"Bio: {Bio}");
            Console.WriteLine($"Photo Description: {PictureDesc}");
            Console.WriteLine($"Topic: {Subject}");
            Console.WriteLine($"Speaking Time: {TimeSlot}");
            Console.WriteLine($"Hotel Room Needed: {(NeedsHotel ? "Yes" : "No")}");
            Console.WriteLine($"Courtesy Baggage Check: {(BaggageCheck ? "Yes" : "No")}");
        }
    }

    class Program
    {
        static List<Guest> guestList = new List<Guest>();
        static List<Speaker> speakerList = new List<Speaker>();

        static void Main(string[] args)
        {
            // Display Business Info
            Business biz = new Business
            {
                Name = "NetworkX Events",
                Location = "Phoenix, AZ",
                Contact = "info@networkxevents.com | (555) 123-4567",
                Services = "Event Admissions, Vendor Management, Online Menus, HR Staffing",
                SocialMedia = "@NetworkXEvents"
            };
            biz.DisplayInfo();

            while (true)
            {
                Console.WriteLine("\n--- Main Menu ---");
                Console.WriteLine("1. Register Guest");
                Console.WriteLine("2. Register Speaker");
                Console.WriteLine("3. View All Guests");
                Console.WriteLine("4. View All Speakers");
                Console.WriteLine("5. Exit");
                Console.Write("Choose an option: ");
                string option = Console.ReadLine();

                switch (option)
                {
                    case "1":
                        RegisterGuest();
                        break;
                    case "2":
                        RegisterSpeaker();
                        break;
                    case "3":
                        ShowGuests();
                        break;
                    case "4":
                        ShowSpeakers();
                        break;
                    case "5":
                        Console.WriteLine("Thank you for using the system. Goodbye!");
                        return;
                    default:
                        Console.WriteLine("Invalid choice. Try again.");
                        break;
                }
            }
        }

        static void RegisterGuest()
        {
            Console.WriteLine("\n--- Register Guest ---");
            Console.Write("Full Name: ");
            string name = Console.ReadLine();

            Console.Write("Email: ");
            string email = Console.ReadLine();

            Console.WriteLine("Enter breakout sessions (type 'done' to finish):");
            List<string> sessions = new List<string>();
            while (true)
            {
                string input = Console.ReadLine();
                if (input.ToLower() == "done") break;
                sessions.Add(input);
            }

            Console.Write("Do they need a hotel room? (yes/no): ");
            bool hotel = Console.ReadLine().ToLower() == "yes";

            Console.Write("Do they need baggage check? (yes/no): ");
            bool baggage = Console.ReadLine().ToLower() == "yes";

            guestList.Add(new Guest
            {
                FullName = name,
                Email = email,
                BreakoutSessions = sessions,
                NeedsHotel = hotel,
                BaggageCheck = baggage
            });

            Console.WriteLine("✅ Guest registered successfully. Ticket charged: $200.");
        }

        static void RegisterSpeaker()
        {
            Console.WriteLine("\n--- Register Speaker ---");
            Console.Write("Full Name: ");
            string name = Console.ReadLine();

            Console.Write("Company Name: ");
            string company = Console.ReadLine();

            Console.Write("Bio: ");
            string bio = Console.ReadLine();

            Console.Write("Photo description: ");
            string pic = Console.ReadLine();

            Console.Write("Speaking Subject: ");
            string subject = Console.ReadLine();

            Console.Write("Time & Date of Presentation: ");
            string time = Console.ReadLine();

            Console.Write("Do they need a hotel room? (yes/no): ");
            bool hotel = Console.ReadLine().ToLower() == "yes";

            Console.Write("Do they need baggage check? (yes/no): ");
            bool baggage = Console.ReadLine().ToLower() == "yes";

            speakerList.Add(new Speaker
            {
                FullName = name,
                Company = company,
                Bio = bio,
                PictureDesc = pic,
                Subject = subject,
                TimeSlot = time,
                NeedsHotel = hotel,
                BaggageCheck = baggage
            });

            Console.WriteLine("✅ Speaker registered successfully.");
        }

        static void ShowGuests()
        {
            Console.WriteLine("\n=== Registered Guests ===");
            if (guestList.Count == 0)
            {
                Console.WriteLine("No guests registered.");
                return;
            }

            foreach (var guest in guestList)
            {
                guest.Display();
            }
        }

        static void ShowSpeakers()
        {
            Console.WriteLine("\n=== Registered Speakers ===");
            if (speakerList.Count == 0)
            {
                Console.WriteLine("No speakers registered.");
                return;
            }

            foreach (var speaker in speakerList)
            {
                speaker.Display();
            }
        }
    }
}
