import math
import csv
from io import StringIO

# === Shapes3D Namespace ===

class Shape3D:
    def surface_area(self):
        raise NotImplementedError

    def volume(self):
        raise NotImplementedError

class Cuboid(Shape3D):
    def __init__(self, width, height, depth):
        self._width = width
        self._height = height
        self._depth = depth
        self._area = 2 * (width * height + width * depth + height * depth)
        self._volume = width * height * depth

    def surface_area(self):
        return self._area

    def volume(self):
        return self._volume

class Cube(Cuboid):
    def __init__(self, side_length):
        super().__init__(side_length, side_length, side_length)

class Cylinder(Shape3D):
    def __init__(self, radius, height):
        self._radius = radius
        self._height = height
        self._area = 2 * math.pi * radius * (radius + height)
        self._volume = math.pi * radius**2 * height

    def surface_area(self):
        return self._area

    def volume(self):
        return self._volume

class Sphere(Shape3D):
    def __init__(self, radius):
        self._radius = radius
        self._area = 4 * math.pi * radius**2
        self._volume = (4/3) * math.pi * radius**3

    def surface_area(self):
        return self._area

    def volume(self):
        return self._volume

class Polygon:
    def __init__(self, side_length, sides):
        self._side_length = side_length
        self._sides = sides
        self._apothem = side_length / (2 * math.tan(math.pi / sides))
        self._area = (sides * side_length * self._apothem) / 2

    def area(self):
        return self._area

class Prism(Shape3D):
    def __init__(self, side_length, faces, height):
        self._polygon = Polygon(side_length, faces)
        self._height = height
        base_area = self._polygon.area()
        perimeter = faces * side_length
        self._area = 2 * base_area + perimeter * height
        self._volume = base_area * height

    def surface_area(self):
        return self._area

    def volume(self):
        return self._volume

# === FinalAssignment Namespace ===

class Solver:
    @staticmethod
    def process_file(input_data):
        shapes = []
        total = 0.0

        reader = csv.reader(StringIO(input_data))
        for line in reader:
            if not line:
                continue

            shape_type = line[0].strip().lower()

            try:
                if shape_type == "cube":
                    shapes.append(Cube(float(line[1])))
                elif shape_type == "cuboid":
                    shapes.append(Cuboid(float(line[1]), float(line[2]), float(line[3])))
                elif shape_type == "cylinder":
                    shapes.append(Cylinder(float(line[1]), float(line[2])))
                elif shape_type == "sphere":
                    shapes.append(Sphere(float(line[1])))
                elif shape_type == "prism":
                    shapes.append(Prism(float(line[1]), int(line[2]), float(line[3])))
                elif shape_type in ("area", "volume"):
                    multiplier = int(line[1])
                    measurement_sum = sum(
                        shape.surface_area() if shape_type == "area" else shape.volume()
                        for shape in shapes
                    )
                    total += measurement_sum * multiplier
                    shapes.clear()  # reset shape list after processing
            except Exception as e:
                print(f"Error processing line {line}: {e}")
                continue

        return total

# === Main Execution ===

def main():
    # Replace this with your actual input if needed
    csv_data = """cube,1.4787
cuboid,2.6561,1.9380,3.6978
prism,4.3930,3,4.4710
cube,1.2667
area,3
sphere,4.3393
prism,2.2624,5,4.5433
cylinder,4.0880,2.1208
volume,1
prism,1.8479,5,4.3124
cylinder,1.1235,1.0005
sphere,3.3918
area,4
cuboid,4.5097,1.6104,3.7918
prism,3.3981,7,3.9521
prism,2.1530,6,3.3442
sphere,2.1051
area,2
cube,3.2900
sphere,2.8449
prism,3.5020,8,1.2773
area,1
prism,1.2385,6,2.0526
cylinder,3.9727,1.4834
cylinder,4.8613,2.3540
cube,1.6643
area,3"""

    result = Solver.process_file(csv_data)
    print(f"The sum of measurements is {result:,.2f}.")

# Run the program
main()
